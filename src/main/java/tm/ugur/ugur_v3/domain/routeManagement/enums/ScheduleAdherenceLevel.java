package tm.ugur.ugur_v3.domain.routeManagement.enums;

import lombok.Getter;

@Getter
public enum ScheduleAdherenceLevel {
    EXCELLENT("–û—Ç–ª–∏—á–Ω—ã–π", 95.0, 100.0, "üü¢", "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"),
    GOOD("–•–æ—Ä–æ—à–∏–π", 85.0, 94.9, "üü°", "–•–æ—Ä–æ—à–µ–µ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"),
    SATISFACTORY("–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π", 75.0, 84.9, "üü†", "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ"),
    POOR("–ü–ª–æ—Ö–æ–π", 60.0, 74.9, "üî¥", "–ü–ª–æ—Ö–æ–µ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"),
    CRITICAL("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π", 0.0, 59.9, "üö®", "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–æ–µ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ");

    private final String displayName;
    private final double minPercentage;
    private final double maxPercentage;
    private final String indicator;
    private final String description;

    ScheduleAdherenceLevel(String displayName, double minPercentage, double maxPercentage,
                           String indicator, String description) {
        this.displayName = displayName;
        this.minPercentage = minPercentage;
        this.maxPercentage = maxPercentage;
        this.indicator = indicator;
        this.description = description;
    }

    public static ScheduleAdherenceLevel fromPercentage(double percentage) {
        if (percentage >= 95.0) return EXCELLENT;
        if (percentage >= 85.0) return GOOD;
        if (percentage >= 75.0) return SATISFACTORY;
        if (percentage >= 60.0) return POOR;
        return CRITICAL;
    }

    public boolean requiresImmediateAction() {
        return this == POOR || this == CRITICAL;
    }

    public boolean requiresMonitoring() {
        return this == SATISFACTORY || this == POOR || this == CRITICAL;
    }

    public boolean isAcceptable() {
        return this == EXCELLENT || this == GOOD;
    }

    public int getRecommendedCheckIntervalHours() {
        return switch (this) {
            case EXCELLENT -> 24;    // –†–∞–∑ –≤ –¥–µ–Ω—å
            case GOOD -> 12;         // –î–≤–∞–∂–¥—ã –≤ –¥–µ–Ω—å
            case SATISFACTORY -> 6;  // –ö–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
            case POOR -> 2;          // –ö–∞–∂–¥—ã–µ 2 —á–∞—Å–∞
            case CRITICAL -> 1;      // –ö–∞–∂–¥—ã–π —á–∞—Å
        };
    }

    @Override
    public String toString() {
        return indicator + " " + displayName + String.format(" (%.1f-%.1f%%)", minPercentage, maxPercentage);
    }
}